<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.UserDao">
    <!--
    resultType：是查询的select标签才有的，用于设置  查询结果集封装的类型。
        要求：JavaBean的属性名，和 查询结果集里字段名  要一样
             如果不同，结果是：名称不同的，封装不进去，JavaBean里得到是null
    如果JavaBean属性名，和表字段名不一致，两种解决方案：
        1. 使用resultType，但是SQL语句里给字段起别名
        2. 使用resultMap代替resultType：配置字段名  和  JavaBean属性名的对应关系
    -->
    <!--<select id="queryAllUser2" resultType="com.itheima.domain.User2">
        SELECT id userId, username, birthday userBirthday, sex userSex, address userAddress FROM user
    </select>-->
    <select id="queryAllUser2" resultMap="user2Map">
        select * from user
    </select>
    <resultMap id="user2Map" type="User2">
        <!--写  每个JavaBean属性名， 及对应的 字段名 -->
        <!--主键字段的对应，用id标签。Mybatis的性能会比较高-->
        <id property="userId" column="id"/>
        <!--非主键字段的对应，用result标签-->
        <result property="username" column="username"/>
        <result property="userBirthday" column="birthday"/>
        <result property="userSex" column="sex"/>
        <result property="userAddress" column="address"/>
    </resultMap>

    <select id="queryAll" resultType="user">
        select * from user
    </select>

    <update id="edit" parameterType="user">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from user where id = #{abc}
    </delete>

    <select id="totalCount" resultType="int">
        select count(*) from user
    </select>

    <!--SQL语句里，要从QueryVO里获取user对象，从user对象里获取username-->
    <!--参数和resultType，写的都是别名-->
    <select id="searchByVo" parameterType="queryvo" resultType="user">
        select * from user where username like #{user.username}
    </select>

    <!--参数String类型，写了别名string。结果集resultType也写成了别名-->
    <select id="searchByUsername" parameterType="string" resultType="user">
        select * from user where username like #{username}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--组件扫描，开启spring的IOC的注解支持，@Controller、@Service、@Repository、@Component-->
    <!--<context:component-scan base-package="com.itheima.ssm">-->
        <!--排除@Controller-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>-->
    <!--</context:component-scan>-->


    <!--spring整合Mybatis-->
    <!--1：数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql:///itcastspringmvc"></property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <!--2：创建SqlSessionFactoryBean，这是spring整合mybatis的核心-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源（必须要有）-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置别名-->
        <property name="typeAliasesPackage" value="com.hong.ssm.domain"></property>
        <!--spring提供的一个入口，整合Mybatis的配置文件的入口（可有可无）-->
        <!--<property name="configLocation" value="classpath:sqlMapConfig.xml123"></property>-->
        <!--spring提供的一个入口，整合Mybatis的映射文件的入口（可有可无）-->
        <!--<property name="mapperLocations">-->
            <!--<array>-->
                <!--<value>classpath:com/itheima/ssm/dao/*Dao.xml</value>-->
            <!--</array>-->
        <!--</property>-->
    </bean>

    <!--3：配置映射扫描的配置，该配置通过接口加载映射文件，让Dao的接口可以被spring管理-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hong.ssm.dao"></property>
    </bean>

    <!--配置spring的声明式事务处理-->
    <!--1：创建一个事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--2：使用注解的方式，指定通知（事务中的方法），在@service的类上，添加@Transactional-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!--2：使用xml的方式，指定通知（事务中的方法）
        * 配置对切入点方法的细化
    -->
    <!--<tx:advice id="myAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="edit*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="remove*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" timeout="-1"/>-->
            <!--<tx:method name="*" read-only="true"></tx:method>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--3：配置AOP，让通知（事务的方法）关联切入点（业务层的方法）-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="myAspect" expression="execution(* com.itheima.ssm.service..*.*(..))"></aop:pointcut>-->
        <!--<aop:advisor advice-ref="myAdvice" pointcut-ref="myAspect"></aop:advisor>-->
    <!--</aop:config>-->
</beans>
